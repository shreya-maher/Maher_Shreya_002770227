/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hospitalmgmt_assignment2;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author maher
 */
public class HospitalAdminViewPatient extends javax.swing.JFrame {

    /**
     * Creates new form HospitalAdminViewPatient
     */
    public HospitalAdminViewPatient() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ViewPatientTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        ViewPatientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Patient ID", "Name", "Age", "Blood Pressure", "Body Temperature", "Pulse Rate", "Diagnoses", "House", "Community"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(ViewPatientTable);

        jLabel1.setText("View Visited Patients");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 960, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(533, 533, 533)
                        .addComponent(jLabel1)))
                .addContainerGap(129, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(jLabel1)
                .addGap(219, 219, 219)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(382, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        
        String HospitalID = HospitalAdminLogin.HospitalUsernameField.getText();
        String HospitalName = "";
        
        try{  
        Class.forName("com.mysql.jdbc.Driver");
        Connection HospitalIDConnection = DriverManager.getConnection("jdbc:mysql://localhost/hospital","root", "");           
        Statement HospitalIDStatement = (Statement) HospitalIDConnection.createStatement();
        HospitalName = ("Select hospital from hospitaladmin where username = '"+HospitalID+"' ");
        
        
        PreparedStatement HospitalIDPS = HospitalIDConnection.prepareStatement(HospitalName);
        ResultSet HospitalIDResult = HospitalIDPS.executeQuery(); 
        
        while(HospitalIDResult.next()){
        HospitalName =    HospitalIDResult.getString("hospital");
        
            
        } }   catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
   
    }
        
        
        try{                                       
            Class.forName("com.mysql.jdbc.Driver");
            Connection PatientViewConnection = DriverManager.getConnection("jdbc:mysql://localhost/hospital","root", "");
            Statement PatientViewStatement = (Statement) PatientViewConnection.createStatement();
            String PatientViewSql = ("Select patientid, blood_pressure,body_temperature, pulse_rate, previous_diagnoses, community, name, age, house from patientrecords where hospital_encounter = '"+HospitalName+"' ");
            
            PreparedStatement PatientViewPS = PatientViewConnection.prepareStatement(PatientViewSql);
            ResultSet PatientViewResult = PatientViewPS.executeQuery();
            DefaultTableModel ViewPatientTable1 = (DefaultTableModel)ViewPatientTable.getModel();
            ViewPatientTable1.setRowCount(0);
            while(PatientViewResult.next()){
            Object patientview[]=   { PatientViewResult.getString("patientid"), 
                 PatientViewResult.getString("name"), 
                 PatientViewResult.getString("age"), 
                 PatientViewResult.getString("blood_pressure"), 
                 PatientViewResult.getString("body_temperature"), 
                 PatientViewResult.getString("pulse_rate"), 
                 PatientViewResult.getString("previous_diagnoses"), 
                 PatientViewResult.getString("house"), 
                 PatientViewResult.getString("community"), 
                }    ;
            
            ViewPatientTable1.addRow(patientview);
        }                       
                
                
        
        }catch(Exception e)   {                                       
        JOptionPane.showMessageDialog(null, e);
        }
        
        
        
        
        
    }//GEN-LAST:event_formWindowActivated

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HospitalAdminViewPatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HospitalAdminViewPatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HospitalAdminViewPatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HospitalAdminViewPatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HospitalAdminViewPatient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ViewPatientTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
